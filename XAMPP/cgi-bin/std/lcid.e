namespace lcid

ifdef WINDOWS then
	constant lcid_hex = {
		#0436,
		#041C,
		#0484,
		#045E,
		#1401,
		#3C01,
		#0C01,
		#0801,
		#2C01,
		#3401,
		#3001,
		#1001,
		#1801,
		#2001,
		#4001,
		#0401,
		#2801,
		#1C01,
		#3801,
		#2401,
		#042B,
		#044D,
		#082C,
		#042C,
		#046D,
		#042D,
		#0423,
		#0445,
		#201A,
		#141A,
		#047E,
		#0402,
		#0403,
		#0C04,
		#1404,
		#0804,
		#1004,
		#0404,
		#101A,
		#041A,
		#0405,
		#0406,
		#048C,
		#0465,
		#0813,
		#0413,
		#0C09,
		#2809,
		#1009,
		#2409,
		#4009,
		#1809,
		#2009,
		#4409,
		#1409,
		#3409,
		#4809,
		#1C09,
		#2C09,
		#0809,
		#0409,
		#3009,
		#0425,
		#0438,
		#0464,
		#040B,
		#080C,
		#0C0C,
		#040C,
		#140C,
		#180C,
		#100C,
		#0462,
		#0456,
		#0437,
		#0C07,
		#0407,
		#1407,
		#1007,
		#0807,
		#0408,
		#046F,
		#0447,
		#0468,
		#040D,
		#0439,
		#040E,
		#040F,
		#0470,
		#0421,
		#085D,
		#045D,
		#083C,
		#0410,
		#0810,
		#0411,
		#044B,
		#043F,
		#0453,
		#0486,
		#0487,
		#0457,
		#0812,
		#0412,
		#0440,
		#0454,
		#0426,
		#0427,
		#082E,
		#046E,
		#042F,
		#083E,
		#043E,
		#044C,
		#043A,
		#0481,
		#047A,
		#044E,
		#047C,
		#0450,
		#0850,
		#0461,
		#0414,
		#0814,
		#0482,
		#0448,
		#0463,
		#0429,
		#0415,
		#0416,
		#0816,
		#0446,
		#046B,
		#086B,
		#0C6B,
		#0418,
		#0417,
		#0419,
		#243B,
		#103B,
		#143B,
		#0C3B,
		#043B,
		#083B,
		#203B,
		#183B,
		#1C3B,
		#044F,
		#1C1A,
		#181A,
		#0C1A,
		#081A,
		#046C,
		#0432,
		#045B,
		#041B,
		#0424,
		#2C0A,
		#400A,
		#340A,
		#240A,
		#140A,
		#1C0A,
		#300A,
		#440A,
		#100A,
		#480A,
		#080A,
		#4C0A,
		#180A,
		#3C0A,
		#280A,
		#500A,
		#0C0A,
		#040A,
		#540A,
		#380A,
		#200A,
		#0441,
		#081D,
		#041D,
		#045A,
		#0428,
		#085F,
		#0449,
		#0444,
		#044A,
		#041E,
		#0851,
		#0451,
		#041F,
		#0442,
		#0480,
		#0422,
		#042E,
		#0820,
		#0420,
		#0843,
		#0443,
		#042A,
		#0452,
		#0488,
		#0434,
		#0485,
		#0478,
		#046A,
		#0435,
		#007F
	}

	constant lcid_string = {
		"af_ZA",
		"sq_AL",
		"gsw_FR",
		"am_ET",
		"ar_DZ",
		"ar_BH",
		"ar_EG",
		"ar_IQ",
		"ar_JO",
		"ar_KW",
		"ar_LB",
		"ar_LY",
		"ar_MA",
		"ar_OM",
		"ar_QA",
		"ar_SA",
		"ar_SY",
		"ar_TN",
		"ar_AE",
		"ar_YE",
		"hy_AM",
		"as_IN",
		"az_Cyrl_AZ",
		"az_Latn_AZ",
		"ba_RU",
		"eu_ES",
		"be_BY",
		"bn_IN",
		"bs_Cyrl_BA",
		"bs_Latn_BA",
		"br_FR",
		"bg_BG",
		"ca_ES",
		"zh_HK",
		"zh_MO",
		"zh_CN",
		"zh_SG",
		"zh_TW",
		"hr_BA",
		"hr_HR",
		"cs_CZ",
		"da_DK",
		"prs_AF",
		"dv_MV",
		"nl_BE",
		"nl_NL",
		"en_AU",
		"en_BZ",
		"en_CA",
		"en_029",
		"en_IN",
		"en_IE",
		"en_JM",
		"en_MY",
		"en_NZ",
		"en_PH",
		"en_SG",
		"en_ZA",
		"en_TT",
		"en_GB",
		"en_US",
		"en_ZW",
		"et_EE",
		"fo_FO",
		"fil_PH",
		"fi_FI",
		"fr_BE",
		"fr_CA",
		"fr_FR",
		"fr_LU",
		"fr_MC",
		"fr_CH",
		"fy_NL",
		"gl_ES",
		"ka_GE",
		"de_AT",
		"de_DE",
		"de_LI",
		"de_LU",
		"de_CH",
		"el_GR",
		"kl_GL",
		"gu_IN",
		"ha_Latn_NG",
		"he_IL",
		"hi_IN",
		"hu_HU",
		"is_IS",
		"ig_NG",
		"id_ID",
		"iu_Latn_CA",
		"iu_Cans_CA",
		"ga_IE",
		"it_IT",
		"it_CH",
		"ja_JP",
		"kn_IN",
		"kk_KZ",
		"kh_KH",
		"qut_GT",
		"rw_RW",
		"kok_IN",
		"ko_KR",
		"ky_KG",
		"lo_LA",
		"lv_LV",
		"lt_LT",
		"dsb_DE",
		"lb_LU",
		"mk_MK",
		"ms_BN",
		"ms_MY",
		"ml_IN",
		"mt_MT",
		"mi_NZ",
		"arn_CL",
		"mr_IN",
		"moh_CA",
		"mn_Cyrl_MN",
		"mn_Mong_CN",
		"ne_IN",
		"ne_NP",
		"nb_NO",
		"nn_NO",
		"oc_FR",
		"or_IN",
		"ps_AF",
		"fa_IR",
		"pl_PL",
		"pt_BR",
		"pt_PT",
		"pa_IN",
		"quz_BO",
		"quz_EC",
		"quz_PE",
		"ro_RO",
		"rm_CH",
		"ru_RU",
		"smn_FI",
		"smj_NO",
		"smj_SE",
		"se_FI",
		"se_NO",
		"se_SE",
		"sms_FI",
		"sma_NO",
		"sma_SE",
		"sa_IN",
		"sr_Cyrl_BA",
		"sr_Latn_BA",
		"sr_Cyrl_CS",
		"sr_Latn_CS",
		"ns_ZA",
		"tn_ZA",
		"si_LK",
		"sk_SK",
		"sl_SI",
		"es_AR",
		"es_BO",
		"es_CL",
		"es_CO",
		"es_CR",
		"es_DO",
		"es_EC",
		"es_SV",
		"es_GT",
		"es_HN",
		"es_MX",
		"es_NI",
		"es_PA",
		"es_PY",
		"es_PE",
		"es_PR",
		"es_ES",
		"es_ES_tradnl",
		"es_US",
		"es_UY",
		"es_VE",
		"sw_KE",
		"sv_FI",
		"sv_SE",
		"syr_SY",
		"tg_Cyrl_TJ",
		"tmz_Latn_DZ",
		"ta_IN",
		"tt_RU",
		"te_IN",
		"th_TH",
		"bo_BT",
		"bo_CN",
		"tr_TR",
		"tk_TM",
		"ug_CN",
		"uk_UA",
		"wen_DE",
		"tr_IN",
		"ur_PK",
		"uz_Cyrl_UZ",
		"uz_Latn_UZ",
		"vi_VN",
		"cy_GB",
		"wo_SN",
		"xh_ZA",
		"sah_RU",
		"ii_CN",
		"yo_NG",
		"zu_ZA",
		"C"
	}

	--**
	-- type for a locale context
	--
	-- Returns 1 if ##x## is a locale context identifier

	public type lcid( object x ) 
		return find(x, lcid_hex) != 0
	end type

	--**
	--
	-- Returns:
	--  the current locale context identifier.   
	--
	-- Returns:
	-- # The ##lcid## which is of type LCID in C/C++.
	--

	public function get_lcid(sequence name)
		integer i = find(name, lcid_string)
		if not i then
			i = length(lcid_hex) -- get LOCALE_INVARIANT/C locale
		end if

		return lcid_hex[i]
	end function

end ifdef
